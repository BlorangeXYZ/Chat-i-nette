import { BaseCumulativeTransformOutputParser } from "./transform.js";
import { Operation } from "../utils/json_patch.js";
import { ChatGeneration, Generation } from "../outputs.js";
/**
 * Class for parsing the output of an LLM into a JSON object.
 */
export declare class JsonOutputParser extends BaseCumulativeTransformOutputParser<object> {
    static lc_name(): string;
    lc_namespace: string[];
    lc_serializable: boolean;
    protected _diff(prev: unknown | undefined, next: unknown): Operation[] | undefined;
    parsePartialResult(generations: ChatGeneration[] | Generation[]): Promise<object | undefined>;
    parse(text: string): Promise<object>;
    getFormatInstructions(): string;
}
export declare function parseJsonMarkdown(s: string, parser?: typeof parsePartialJson): any;
export declare function parsePartialJson(s: string): any;
